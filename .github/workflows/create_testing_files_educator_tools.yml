name: Create Testing Files - Educator Tools

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache git lfs
        uses: actions/cache@v4.2.2
        with:
          path: .git/lfs
          key: .git/lfs

      - name: Pull lfs data, if not cached
        run: git lfs pull

      - name: Get upload URL
        id: get_upload_url
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Update addon version
        run: |
          python ./.github/python/change_version_in_function.py ${{ steps.get_upload_url.outputs.tag_name }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install js modules
        if: ${{ always() && (hashFiles('regolith/filters_data/package.json') != '') }}
        id: install_js_modules
        run: |
          cd regolith/filters_data
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.SHAPESCAPE_API_ACCESS }}" > .npmrc
          echo "@shapescape-software=https://npm.pkg.github.com/" >> .npmrc
          echo "always-auth=true" >> .npmrc
          npm i
          cd ../..

      - name: Run Regolith
        id: run_regolith
        run: |
          cd regolith

          wget https://github.com/Bedrock-OSS/regolith/releases/download/1.5.1/regolith_1.5.1_linux_386.tar.gz
          tar xvf regolith_1.5.1_linux_386.tar.gz

          chmod +x regolith
          ./regolith install-all
          ./regolith run packaging_educator_tools
          cd ..
          cd behavior_packs/0
          rm -r -f ./node_modules

      - name: Create pack file
        id: create_pack_file
        env:
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
          tag_name: ${{ steps.get_upload_url.outputs.tag_name }}
        run: |
          echo INFO: downloading pillow module for Python
          pip install pillow

          python ./.github/python/create_testing_files.py ~/zip_tmp '.' ~/mcaddon_file_dir $tag_name educator_tools

          asset_name_2=$(ls ~/mcaddon_file_dir)

          asset_path_2=~/mcaddon_file_dir/$asset_name_2

          echo "::set-output name=asset_name_1::$asset_name_1"
          echo "::set-output name=asset_name_2::$asset_name_2"
          echo "::set-output name=asset_path_1::$asset_path_1"
          echo "::set-output name=asset_path_2::$asset_path_2"

      - name: Upload mcaddon
        id: upload-mcaddon
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
          asset_path: ${{ steps.create_pack_file.outputs.asset_path_2 }}
          asset_name: ${{ steps.create_pack_file.outputs.asset_name_2 }}
          asset_content_type: application/zip
